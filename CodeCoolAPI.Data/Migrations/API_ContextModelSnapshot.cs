// <auto-generated />
using System;
using CodeCoolAPI.Data.Model.API_Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CodeCoolAPI.Data.Migrations
{
    [DbContext(typeof(API_Context))]
    partial class API_ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CodeCoolAPI.Data.Model.CodecoolDataModel.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthorId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("CodeCoolAPI.Data.Model.CodecoolDataModel.Material", b =>
                {
                    b.Property<int>("MaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaterialId"), 1L, 1);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("MaterialTypeTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PublicationDate")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("MaterialId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("MaterialTypeTypeId");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("CodeCoolAPI.Data.Model.CodecoolDataModel.MaterialType", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("TypeId");

                    b.ToTable("MaterialTypes");

                    b.HasData(
                        new
                        {
                            TypeId = 1,
                            Description = "Outline of definition in .pdf type file",
                            Type = "Pdf file"
                        },
                        new
                        {
                            TypeId = 2,
                            Description = "Ebook-materil with lectures read by the author",
                            Type = "Ebook"
                        },
                        new
                        {
                            TypeId = 3,
                            Description = "Video-tutorial with developed step-by-step examples",
                            Type = "Video"
                        },
                        new
                        {
                            TypeId = 4,
                            Description = "WorkBook with definitions, samples, excersices, answers",
                            Type = "WorkBook"
                        });
                });

            modelBuilder.Entity("CodeCoolAPI.Data.Model.CodecoolDataModel.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"), 1L, 1);

                    b.Property<string>("BaseUserName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ReviewId");

                    b.HasIndex("BaseUserName");

                    b.HasIndex("MaterialId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("CodeCoolAPI.Data.Model.UsersModel.BaseUser", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("CredentialsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nickname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Name");

                    b.HasIndex("CredentialsId");

                    b.ToTable("BaseUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("BaseUser");
                });

            modelBuilder.Entity("CodeCoolAPI.Data.Model.UsersModel.CredentialsContainer", b =>
                {
                    b.Property<Guid>("CredentialsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("CredentialsId");

                    b.ToTable("CredentialsContainers");

                    b.HasData(
                        new
                        {
                            CredentialsId = new Guid("ac0b5af3-7368-414a-b40c-ccb9c97adeae"),
                            Login = "admin",
                            Password = "admin",
                            PasswordHash = new byte[] { 148, 233, 57, 106, 84, 186, 76, 152, 204, 72, 71, 12, 174, 70, 69, 163, 237, 105, 192, 5, 74, 225, 148, 102, 207, 104, 72, 32, 126, 37, 44, 62, 8, 63, 35, 97, 94, 10, 191, 30, 77, 149, 15, 241, 9, 145, 79, 115, 234, 174, 139, 247, 179, 189, 128, 117, 96, 5, 105, 13, 90, 89, 151, 223 },
                            PasswordSalt = new byte[] { 163, 230, 214, 114, 53, 176, 159, 62, 15, 106, 123, 240, 229, 141, 168, 31, 200, 112, 171, 241, 87, 24, 95, 207, 195, 60, 62, 187, 255, 240, 228, 104, 49, 104, 178, 180, 193, 241, 139, 57, 169, 208, 161, 132, 45, 117, 176, 223, 64, 200, 78, 58, 151, 233, 158, 250, 230, 245, 77, 236, 121, 99, 53, 88, 187, 240, 84, 117, 240, 209, 0, 195, 61, 138, 110, 129, 132, 205, 30, 51, 12, 30, 249, 176, 248, 215, 43, 136, 171, 23, 241, 227, 128, 180, 67, 198, 186, 122, 229, 152, 82, 131, 71, 43, 241, 213, 48, 9, 47, 89, 120, 38, 101, 19, 63, 251, 22, 217, 223, 253, 35, 168, 211, 190, 38, 19, 68, 239 }
                        });
                });

            modelBuilder.Entity("CodeCoolAPI.Data.Model.UsersModel.Admin", b =>
                {
                    b.HasBaseType("CodeCoolAPI.Data.Model.UsersModel.BaseUser");

                    b.HasDiscriminator().HasValue("Admin");
                });

            modelBuilder.Entity("CodeCoolAPI.Data.Model.UsersModel.User", b =>
                {
                    b.HasBaseType("CodeCoolAPI.Data.Model.UsersModel.BaseUser");

                    b.HasDiscriminator().HasValue("User");
                });

            modelBuilder.Entity("CodeCoolAPI.Data.Model.CodecoolDataModel.Material", b =>
                {
                    b.HasOne("CodeCoolAPI.Data.Model.CodecoolDataModel.Author", "Author")
                        .WithMany("Materials")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CodeCoolAPI.Data.Model.CodecoolDataModel.MaterialType", "MaterialType")
                        .WithMany("Materials")
                        .HasForeignKey("MaterialTypeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("MaterialType");
                });

            modelBuilder.Entity("CodeCoolAPI.Data.Model.CodecoolDataModel.Review", b =>
                {
                    b.HasOne("CodeCoolAPI.Data.Model.UsersModel.BaseUser", null)
                        .WithMany("Reviews")
                        .HasForeignKey("BaseUserName");

                    b.HasOne("CodeCoolAPI.Data.Model.CodecoolDataModel.Material", "Material")
                        .WithMany("Reviews")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");
                });

            modelBuilder.Entity("CodeCoolAPI.Data.Model.UsersModel.BaseUser", b =>
                {
                    b.HasOne("CodeCoolAPI.Data.Model.UsersModel.CredentialsContainer", "Credentials")
                        .WithMany()
                        .HasForeignKey("CredentialsId");

                    b.Navigation("Credentials");
                });

            modelBuilder.Entity("CodeCoolAPI.Data.Model.CodecoolDataModel.Author", b =>
                {
                    b.Navigation("Materials");
                });

            modelBuilder.Entity("CodeCoolAPI.Data.Model.CodecoolDataModel.Material", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("CodeCoolAPI.Data.Model.CodecoolDataModel.MaterialType", b =>
                {
                    b.Navigation("Materials");
                });

            modelBuilder.Entity("CodeCoolAPI.Data.Model.UsersModel.BaseUser", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
